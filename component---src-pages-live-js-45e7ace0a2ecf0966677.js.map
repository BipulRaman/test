{"version":3,"sources":["webpack://bipul-raman/./src/pages/live.js","webpack://bipul-raman/./src/configs/APIConfig.js","webpack://bipul-raman/./src/services/BlogService.js"],"names":["useStyles","makeStyles","root","margin","padding","height","rootNoLive","sectionTitle","paddingBottom","videoContainer","position","video","top","left","width","img","maxWidth","LivePage","classes","useState","ytLiveUrlKey","setYTLiveUrlKey","useEffect","GetSiteConfig","response","result","t","className","title","src","frameborder","allowfullscreen","elevation","variant","Images","alt","Title","LivePageMetadata","Description","BlogAPIEndpoint","headers","bearer","requestOptions","method","body","formData","fetch","error","console","accessToken"],"mappings":"uPAUMA,GAAYC,QAAW,iBAAO,CAChCC,KAAM,CACFC,OADE,GAEFC,QAFE,GAGFC,OAAQ,QAEZC,WAAY,CACRH,OADQ,GAERC,QAAS,IAEbG,aAAc,CACVC,cAAe,IAEnBC,eAAgB,CACZN,OADY,GAEZC,QAFY,GAGZM,SAHY,WAIZF,cAJY,MAKZH,OAAQ,KAEZM,MAAO,CACHD,SADG,WAEHE,IAFG,EAGHC,KAHG,EAIHC,MAJG,MAKHT,OAAQ,OAEZU,IAAK,CACDC,SADC,QAEDF,MAAO,YAIA,SAASG,IACpB,IAAMC,EAAUlB,IAChB,GAAwCmB,cAAxC,MAAOC,EAAP,KAAqBC,EAArB,KAYA,OAVAC,gBAAU,YACNC,gBACU,YACF,YAAIC,EAAwB,CACxB,IAAIC,EAASD,EAAA,MAAc,SAAAE,GAAC,uBAAIA,YAAhC,MACAL,WALhBC,IAWI,yBACOF,EAUC,uBAAKO,UAAWT,EAAQT,gBACpB,0BAAQmB,MAAR,aAA2BC,IAAK,0CAAhC,EAA0FC,YAA1F,IAA0GC,iBAA1G,EAA0HJ,UAAWT,EAAQP,SAVjJ,qBAAOqB,UAAP,EAAqBL,UAAWT,EAAQZ,YACpC,qBAAY2B,QAAZ,KAAyBN,UAAWT,EAAQX,cADhD,yCAII,qBAJJ,MAIU,qBAJV,MAKI,uBAAKsB,IAAKK,aAAgBP,UAAWT,EAArC,IAAkDiB,IAAI,iCAS9D,qBACIC,MAAOC,WACPC,YAAaD,sB,oMCxEhBE,EAAkB,oDAAlBA,EAAkB,uDAAlBA,EAAkB,uDAAlBA,EAAkB,wDAAlBA,EAMM,6DCYnB,+C,wCAAO,kGACGC,EAAU,IADb,QAEGC,EAFH,YAIHD,4BACAA,4CACAA,0FAEME,EAAiB,CACnBC,OADmB,OAEnBH,QAFmB,EAGnBI,KAAMC,GAXP,kBAcIC,MAAMP,EAAN,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAhBb,4C,sBAmBP,+C,wCAAO,8FAEGN,EAAiB,CACnBC,OADmB,SAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,cAAiB,UAAYS,IAPlC,kBAWIH,MAAMP,MAAD,EAAL,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAbb,4C,sBAgBP,6C,wCAAO,4FAEGN,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAAgB,qBAPrB,kBAWIM,MAAMP,MAAD,EAAL,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAbb,4C,sBAgBP,6C,wCAAO,4FAEGN,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAFK,iDAGL,eAAgB,qBAPrB,kBAWIM,MAAMP,MAAD,EAAL,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAbb,4C,sBAgBP,4C,wCAAO,2FAEGN,EAAiB,CACnBC,OADmB,MAEnBH,QAAS,CACL,8BADK,IAEL,+BAAgC,mDANrC,kBAUIM,MAAMP,EAAN,SACG,SAAAf,GAAQ,OAAIA,EAAJ,UADX,OAEI,SAAAuB,GAAK,OAAIC,YAAJ,OAZb,4C","file":"component---src-pages-live-js-45e7ace0a2ecf0966677.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Layout from 'layout/Layout';\r\nimport { GetSiteConfig } from \"services/BlogService\";\r\nimport { Images } from 'configs/SiteConfig';\r\nimport { LivePageMetadata } from 'configs/PageMetadata';\r\nimport Metadata from 'components/Metadata';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        margin: 20,\r\n        padding: 20,\r\n        height: \"80vh\",\r\n    },\r\n    rootNoLive: {\r\n        margin: 20,\r\n        padding: 20,\r\n    },\r\n    sectionTitle: {\r\n        paddingBottom: 10\r\n    },\r\n    videoContainer: {\r\n        margin: 20,\r\n        padding: 20,\r\n        position: \"relative\",\r\n        paddingBottom: \"53%\",\r\n        height: \"0\"\r\n    },\r\n    video: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"95%\",\r\n        height: \"95%\"\r\n    },\r\n    img: {\r\n        maxWidth: \"560px\",\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function LivePage() {\r\n    const classes = useStyles();\r\n    const [ytLiveUrlKey, setYTLiveUrlKey] = useState(null);\r\n\r\n    useEffect(() => {\r\n        GetSiteConfig()\r\n            .then((response) => {\r\n                if (response !== undefined) {\r\n                    var result = response.find(t => t.rowKey === 'YTLiveUrlKey').value;\r\n                    setYTLiveUrlKey(result);\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Layout>\r\n            { !ytLiveUrlKey ?\r\n                <Paper elevation={3} className={classes.rootNoLive}>\r\n                    <Typography variant=\"h6\" className={classes.sectionTitle}>\r\n                        Bipul is not Livestreaming right now.\r\n                    </Typography>\r\n                    <br /><br />\r\n                    <img src={Images.NotLive} className={classes.img} alt=\"Bipul is not Livestreaming.\"></img>\r\n                </Paper>\r\n                :\r\n\r\n                <div className={classes.videoContainer}>\r\n                    <iframe title=\"LiveStream\" src={\"https://www.youtube-nocookie.com/embed/\" + ytLiveUrlKey} frameborder=\"0\" allowfullscreen className={classes.video}></iframe>\r\n                </div>\r\n\r\n            }\r\n            <Metadata\r\n                Title={LivePageMetadata.Title}\r\n                Description={LivePageMetadata.Description}\r\n            />\r\n        </Layout>\r\n    );\r\n}\r\n","export const graphConfig = {\r\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\r\n};\r\n\r\nexport const BlogAPIEndpoint = {\r\n    Create: \"https://bipulappapi.azurewebsites.net/api/BlogCreate\",\r\n    CreateNew: \"https://bipulappapi.azurewebsites.net/api/BlogNew\",\r\n    Delete: \"https://bipulappapi.azurewebsites.net/api/BlogDelete\",\r\n    GetOneBlog: \"https://bipulapppublicapi.azurewebsites.net/api/Blog\",\r\n    GetBlogs: \"https://bipulapppublicapi.azurewebsites.net/api/Blogs\",\r\n    GetSiteConfig: \"https://bipulapppublicapi.azurewebsites.net/api/SiteConfig\"\r\n};\r\n\r\nexport const BlogAPIEndpoint1 = {\r\n    Create: \"http://localhost:7071/api/BlogCreate\",\r\n    CreateNew: \"http://localhost:7071/api/BlogNew\",\r\n    Delete: \"http://localhost:7071/api/BlogDelete\",\r\n    GetById: \"http://localhost:7071/api/BlogGetById\"\r\n};","import { BlogAPIEndpoint } from \"configs/APIConfig\";\r\n\r\nexport async function BlogCreate(accessToken, data) {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n\r\n    headers.append(\"Authorization\", bearer);\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    \r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: JSON.stringify(data)\r\n    };\r\n\r\n    return fetch(BlogAPIEndpoint.Create, requestOptions)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport async function BlogNew(accessToken, formData) {\r\n    const headers = new Headers();\r\n    const bearer = `Bearer ${accessToken}`;\r\n\r\n    headers.append(\"Authorization\", bearer);\r\n    headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n    headers.append(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    \r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: headers,\r\n        body: formData\r\n    };\r\n\r\n    return fetch(BlogAPIEndpoint.CreateNew, requestOptions)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport async function BlogDelete(accessToken, blogId) {\r\n    \r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: { \r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\r\n            'Authorization': 'Bearer ' + accessToken\r\n        }\r\n    };\r\n\r\n    return fetch(BlogAPIEndpoint.Delete + '/' + blogId, requestOptions)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport async function BlogGetById(blogId) {\r\n    \r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { \r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    return fetch(BlogAPIEndpoint.GetOneBlog + '/' + blogId, requestOptions)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport async function BlogGetAll(skipCount) {\r\n    \r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { \r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    return fetch(BlogAPIEndpoint.GetBlogs + '/' + skipCount, requestOptions)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nexport async function GetSiteConfig() {\r\n    \r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: { \r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\r\n        }\r\n    };\r\n\r\n    return fetch(BlogAPIEndpoint.GetSiteConfig, requestOptions)\r\n        .then(response => response.json())\r\n        .catch(error => console.log(error));\r\n}"],"sourceRoot":""}